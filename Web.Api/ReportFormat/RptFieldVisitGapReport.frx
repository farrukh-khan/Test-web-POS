<?xml version="1.0" encoding="utf-8"?>
<Report ScriptLanguage="CSharp" TextQuality="Regular" ReportInfo.Description="This example demonstrates how to fit dynamically generated TableObject to page width. To do this:&#13;&#10;&#13;&#10;- use Table1.ResultTable property to access generated table;&#13;&#10;&#13;&#10;- use the AfterCalcBounds event to fix table columns, just before printing the result table.&#13;&#10;&#13;&#10;See more details in the report script." ReportInfo.Created="08/01/2008 14:01:38" ReportInfo.Modified="04/30/2016 02:48:35" ReportInfo.CreatorVersion="2014.2.7.0">
  <ScriptText>
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Windows.Forms;
    using System.Drawing;
    using System.Data;
    using FastReport;
    using FastReport.Data;
    using FastReport.Dialog;
    using FastReport.Barcode;
    using FastReport.Table;
    using FastReport.Utils;

    namespace FastReport
    {
    public class ReportScript
    {

    private void Table1_ManualBuild(object sender, EventArgs e)
    {
    
    // get the &quot;Customers&quot; datasource
    DataSourceBase customers = Report.GetDataSource(&quot;Table&quot;);
    // init it
    customers.Init();

    // number of columns in the datasource
    int colCount = customers.Columns.Count;

    // print the table header which contains column titles. It's a row with index = 0.
    Table1.PrintRow(0);
    for (int i = 0; i &lt; colCount; i++)
    {

    // fill the cell with column title
    Cell1.Text = customers.Columns[i].Alias;
    

    // print it
    Table1.PrintColumn(0);
    }

    // now print a datasource content
    while (customers.HasMoreRows)
    {
    // print the table body. It's a row with index = 1.
    Table1.PrintRow(1);
    for (int i = 0; i &lt; colCount; i++)
    {
    // fill the cell with datasource column's data
    Cell2.Text =customers[customers.Columns[i]].ToString();

    // print it
    Table1.PrintColumn(0);
    }

    // move to the next row
    customers.Next();
    }

    // AfterCalcBounds event is fired after calculating table bounds, just before
    // printing the table. We will use it to correct the column's width.
    Table1.ResultTable.AfterCalcBounds += new EventHandler(ResultTable_AfterCalcBounds);



    }

    private void ResultTable_AfterCalcBounds(object sender, EventArgs e)
    {
    TableResult resultTable = sender as TableResult;
    float tableWidth = resultTable.Width;
    float pageWidth = Engine.PageWidth;
    int colCount = resultTable.Columns.Count;





    //   if (tableWidth &gt; pageWidth)
    {



    tableWidth = pageWidth;
    // table is wider than page, correct the columns width
    float ratio = pageWidth / colCount;
    
    for(int i =0; i &lt; colCount;i++)

    {


    resultTable.Columns[i].MinWidth = ratio;

    //column.AutoSize =true;
    //column.Width *= ratio;
    }

    resultTable.Columns[0].MinWidth = 10;
    resultTable.Columns[1].MinWidth = 100;
    
    



    // this will recalculate table rows height
    resultTable.CalcHeight();
    }
    }


    }
    }
  </ScriptText>
  <Dictionary>
    <TableDataSource Name="Table" ReferenceName="Table" DataType="System.Int32" Enabled="true"/>
    <Parameter Name="CompanyName" DataType="System.String"/>
  </Dictionary>
  <ReportPage Name="Page1" RawPaperSize="9" FirstPageSource="15" OtherPagesSource="15" Guides="926.1">
    <ReportTitleBand Name="ReportTitle1" Width="718.2" Height="47.25">
      <TextObject Name="Text4" Left="-9450" Top="-9450" Width="113.4" Height="18.9" Text="Student Name :" VertAlign="Center" Font="Arial, 10pt, style=Bold"/>
      <TextObject Name="Text22" Left="9.45" Top="9.45" Width="170.1" Height="28.35" Text="[CompanyName]" VertAlign="Center" Font="Arial, 12pt, style=Bold"/>
      <TextObject Name="Text79" Left="349.65" Top="9.45" Width="103.95" Height="18.9" Text="Banks" VertAlign="Center" Font="Arial, 14pt, style=Bold"/>
    </ReportTitleBand>
    <DataBand Name="Data1" Top="51.25" Width="718.2" Height="32.13" Guides="0">
      <TableObject Name="Table1" Left="9.45" Width="490.55" Height="32.13" Border.Lines="All" CanBreak="false" RepeatHeaders="false" ManualBuildEvent="Table1_ManualBuild">
        <TableColumn Name="Column1" Width="490.55" AutoSize="true"/>
        <TableRow Name="Row2" Height="17.01" AutoSize="true">
          <TableCell Name="Cell1" Border.Lines="All" CanBreak="false" VertAlign="Center" WordWrap="false" Font="Microsoft Sans Serif, 10pt, style=Bold"/>
        </TableRow>
        <TableRow Name="Row3" Height="15.12" AutoSize="true">
          <TableCell Name="Cell2" Border.Lines="All" CanBreak="false" VertAlign="Center" Font="Microsoft Sans Serif, 8pt, style=Bold"/>
        </TableRow>
      </TableObject>
    </DataBand>
    <PageFooterBand Name="PageFooter1" Top="87.38" Width="718.2" Height="9.45" Guides="0">
      <TextObject Name="Text2" Left="132.3" Width="472.5" Height="9.45" Text="Copyright (c): ITAPX SOLUTIONS Software Company www.itapx.com (03333637395 -  03133561002) " HorzAlign="Center" Font="Cambria, 7pt, style=Bold, Italic"/>
    </PageFooterBand>
  </ReportPage>
</Report>
